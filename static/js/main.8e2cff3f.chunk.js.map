{"version":3,"sources":["components/Header.js","components/AddOption.js","components/Action.js","components/Option.js","components/Options.js","components/OptionModal.js","App.js","index.js"],"names":["Header","props","className","title","subTitle","defaultProps","AddOption","useState","error","setError","onSubmit","e","preventDefault","option","target","elements","value","trim","handleAddOption","type","name","Action","onClick","handlePick","disabled","hasOptions","Option","count","optionText","handleDeleteOption","Options","handleDeleteOptions","options","length","map","index","OptionModal","isOpen","selectedOption","contentLabel","onRequestClose","handleClearSelectedOption","closeTimeoutMS","App","setOptions","setSelectedOption","useEffect","json","localStorage","getItem","JSON","parse","setState","stringify","setItem","console","log","randomNum","Math","floor","random","optionToRemove","filter","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e2cff3f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => (\n    <div className=\"header\">\n        <div className=\"container\">\n            <h1 className=\"header__title\">{props.title}</h1>\n            {props.subTitle && <h2 className=\"header__subtitle\">{props.subTitle}</h2>}\n        </div>\n    </div>\n);\n\nHeader.defaultProps = {\n    title: \"What's for dinner?\",\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n\nconst AddOption = (props) => {\n    const [error, setError] = useState();\n\n    const handleAddOption = (e) => {\n        e.preventDefault();\n        const option = e.target.elements.option.value.trim();\n        const error = props.handleAddOption(option);\n        setError(error);\n\n        if (!error) {\n            e.target.elements.option.value = \"\";\n        }\n    };\n    return (\n        <div>\n            {error && <p className=\"add-option-error\">{error}</p>}\n            <form className=\"add-option\" onSubmit={handleAddOption}>\n                <input className=\"add-option__input\" type=\"text\" name=\"option\"></input>\n                <button className=\"button\">Add Option</button>\n            </form>\n        </div>\n    );\n};\n\nexport default AddOption;\n","import React from \"react\";\n\nconst Action = (props) => (\n    <div>\n        <button className=\"big-button\" onClick={props.handlePick} disabled={!props.hasOptions}>\n            What should I eat?\n        </button>\n    </div>\n);\n\nexport default Action;\n","import React from \"react\";\n\nconst Option = (props) => (\n    <div className=\"option\">\n        <p className=\"option__text\">\n            {props.count} . {props.optionText}\n        </p>\n        <button\n            className=\"button button--link\"\n            onClick={(e) => {\n                props.handleDeleteOption(props.optionText);\n            }}\n        >\n            Remove\n        </button>\n    </div>\n);\n\nexport default Option;\n","import React from \"react\";\nimport Option from \"./Option\";\n\nconst Options = (props) => (\n    <div>\n        <div className=\"widget-header\">\n            <h3 className=\"widget-header__title\">Your Options</h3>\n            <button\n                className=\"button button--link\"\n                onClick={props.handleDeleteOptions}\n            >\n                Remove All\n            </button>\n        </div>\n\n        {props.options.length === 0 && (\n            <p className=\"widget__message\">\n                Please add an option to get started\n            </p>\n        )}\n        {props.options.map((option, index) => (\n            <Option\n                key={option}\n                optionText={option}\n                count={index + 1}\n                handleDeleteOption={props.handleDeleteOption}\n            />\n        ))}\n    </div>\n);\n\nexport default Options;\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nconst OptionModal = (props) => (\n    <Modal\n        isOpen={!!props.selectedOption}\n        contentLabel=\"Selected Option\"\n        onRequestClose={props.handleClearSelectedOption}\n        closeTimeoutMS={200}\n        className=\"modal\"\n    >\n        {props.selectedOption && <p className=\"modal__body\">{props.selectedOption}</p>}\n        <button className=\"button\" onClick={props.handleClearSelectedOption}>\n            Okay\n        </button>\n    </Modal>\n);\n\nexport default OptionModal;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport AddOption from \"./components/AddOption\";\nimport Action from \"./components/Action\";\nimport Options from \"./components/Options\";\nimport OptionModal from \"./components/OptionModal\";\n\nconst App = () => {\n    const [options, setOptions] = useState([]);\n    const [selectedOption, setSelectedOption] = useState();\n\n    const handleDeleteOptions = () => {\n        setOptions([]);\n    };\n\n    const handleDeleteOption = (optionToRemove) => {\n        setOptions(options.filter((option) => optionToRemove !== option));\n    };\n\n    const handlePick = () => {\n        const randomNum = Math.floor(Math.random() * options.length);\n        const option = options[randomNum];\n\n        setSelectedOption(option);\n    };\n\n    const handleAddOption = (option) => {\n        if (!option) {\n            return \"Enter valid value to add item\";\n        } else if (options.indexOf(option) > -1) {\n            return \"This option already exists\";\n        }\n        // this.setState((prevState) => ({\n        //     options: prevState.options.concat(option),\n        // }));\n        setOptions([...options, option]);\n    };\n\n    const handleClearSelectedOption = () => {\n        setSelectedOption(null);\n    };\n\n    useEffect(() => {\n        try {\n            const json = localStorage.getItem(\"options\");\n            const options = JSON.parse(json);\n            if (options) {\n                this.setState(() => ({ options }));\n            }\n        } catch (error) {\n            //Do nothing if json data from form is invalid\n        }\n    }, []);\n\n    useEffect(() => {\n        const json = JSON.stringify(options);\n        localStorage.setItem(\"options\", json);\n        console.log(\"saving data\");\n    }, [options]);\n\n    return (\n        <div>\n            <Header />\n            <div className=\"container\">\n                <Action hasOptions={options.length > 0} handlePick={handlePick} />\n                <div className=\"widget\">\n                    <Options\n                        options={options}\n                        handleDeleteOptions={handleDeleteOptions}\n                        handleDeleteOption={handleDeleteOption}\n                    />\n                    <AddOption handleAddOption={handleAddOption} />\n                </div>\n            </div>\n            <OptionModal selectedOption={selectedOption} handleClearSelectedOption={handleClearSelectedOption} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"normalize.css/normalize.css\";\nimport \"./styles/styles.scss\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}